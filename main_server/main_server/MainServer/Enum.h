#ifndef __ENUM_H__
#define __ENUM_H__

namespace Client
{
	enum CLIENT_MODE
	{
		PROVIDER,
		RECIVER,
		BASE,
		CLIENT_MODE_COUNT,
	};

	enum CLIENT_POSITION
	{
		LOGIN,
		LOBBY,
		ROOM,
		GAME,
		CLIENT_POSITION_COUNT,
	};
};

namespace Client_Position
{
	enum Login_Message
	{
		LOGIN_MSG_LOGIN,
		LOGIN_MSG_CREATE,
		LOGIN_MSG_COUNT,
	};

	enum Lobby_Message
	{
		LOBBY_MSG_ROOM_INFO,
		LOBBY_MSG_USER_INFO,
		LOBBY_MSG_FRIEND_INFO,
		LOBBY_MSG_REFRESH,
		LOBBY_MSG_CHAT,
		LOBBY_MSG_CREATE_ROOM,
		LOBBY_MSG_ENTER_ROOM,
		LOBBY_MSG_COUNT,
	};

	enum Room_Message
	{
		ROOM_MSG_CHAT,
		ROOM_MSG_REFRESH,
		ROOM_MSG_USER_INFO,
		ROOM_MSG_PREV,
		ROOM_MSG_OUT,
		ROOM_MSG_START,
		ROOM_MSG_READY,
		ROOM_MSG_ROOM_INFO,
		ROOM_MSG_CATEGORY,
		ROOM_MSG_COUNT,
	};
}

namespace Game
{
	enum Game_Message
	{
		GAME_MSG_CHAT,
		GAME_MSG_END,
		GAME_MSG_OUT,
		GAME_MSG_USER_INFO,
		GAME_MSG_ROOM_INFO,
		GAME_MSG_TIME_START,
		GAME_MSG_TIME_RIGHT,
		GAME_MSG_TIME_OUT,
		GAME_MSG_PREV,
		GAME_MSG_PICK_TOPIC,
        GAME_MSG_RIGHT,
        GAME_MSG_CATEGORY,
        GAME_MSG_SUCCESS,
		GAME_MSG_COUNT,
	};

	enum Game_Topic
	{
		GAME_TOPIC_ANIMAL,
		GAME_TOPIC_COMIC,
		GAME_TOPIC_SPORTS,
		GAME_TOPIC_MOVIE,
		GAME_TOPIC_COUNT,
	};
}

#endif